@using IMSPortal.Web.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@implements IDisposable

<nav class="navbar navbar-expand-lg bg-primary" data-bs-theme="dark">
    <div class="container">
        <a class="navbar-brand" href="/">
            <i class="bi bi-database-fill"></i> IMS Portal
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        
        <div class="collapse navbar-collapse" id="navbarNav">
            @if (AuthService.IsAuthenticated)
            {
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link @ActiveClass("/dashboard")" href="/dashboard">
                            <i class="bi bi-speedometer2"></i> Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @ActiveClass("/ims-instances")" href="/ims-instances">
                            <i class="bi bi-hdd-network"></i> IMS Instances
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @ActiveClass("/connections")" href="/connections">
                            <i class="bi bi-diagram-2"></i> Connections
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @ActiveClass("/cron-jobs")" href="/cron-jobs">
                            <i class="bi bi-clock"></i> Cron Jobs
                        </a>
                    </li>
                </ul>

                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            <i class="bi bi-person-circle"></i> @AuthService.CurrentUser?.Email
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a class="dropdown-item" href="/account">
                                    <i class="bi bi-gear"></i> Settings
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <button class="dropdown-item text-danger" @onclick="HandleLogout">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </button>
                            </li>
                        </ul>
                    </li>
                </ul>
            }
            else
            {
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link @ActiveClass("/login")" href="/login">
                            <i class="bi bi-box-arrow-in-right"></i> Login
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @ActiveClass("/register")" href="/register">
                            <i class="bi bi-person-plus"></i> Register
                        </a>
                    </li>
                </ul>
            }
        </div>
    </div>
</nav>

@code {
    private string ActiveClass(string path)
    {
        return NavigationManager.Uri.EndsWith(path) ? "active" : "";
    }

    private void HandleLogout()
    {
        AuthService.Logout();
        NavigationManager.NavigateTo("/");
    }

    protected override void OnInitialized()
    {
        AuthService.OnAuthenticationStateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        AuthService.OnAuthenticationStateChanged -= StateHasChanged;
    }
}

